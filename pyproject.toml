# Poetry Configuration
[tool.poetry]
authors = ["kaizen <admin@kaizen.wtf>"]
description = "All Things Linux Discord Bot"
name = "tux"
readme = "README.md"
repository = "https://github.com/allthingslinux/tux"
version = "0.1.0"

[tool.poetry.dependencies]
aiocache = "^0.12.2"
aioconsole = "^0.7.0"
aiofiles = "^24.1.0"
asynctempfile = "^0.5.0"
cairosvg = "^2.7.1"
dateparser = "^1.2.0"
discord-py = "^2.4.0"
githubkit = {extras = ["auth-app"], version = "^0.11.3"}
httpx = "^0.27.0"
loguru = "^0.7.2"
pillow = "^10.3.0"
pre-commit = "^3.7.0"
prisma = "^0.15.0"
psutil = "^6.0.0"
pydantic = "^2.8.2"
pynacl = "^1.5.0"
pyright = "^1.1.358"
python = ">=3.12,<4"
python-dotenv = "^1.0.1"
reactionmenu = "^3.1.7"
rsa = "^4.9"
ruff = "^0.6.0"
sentry-sdk = {extras = ["httpx", "loguru"], version = "^2.7.0"}
types-aiofiles = "^24.1.0.20240626"
types-psutil = "^6.0.0.20240621"
typing-extensions = "^4.12.2"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.30"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

# Ruff Configuration
[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "examples",
  "tmp",
  "tests",
  ".archive",
  "stubs",
]

indent-width = 4
line-length = 120
target-version = "py312"

# Ruff Linting Configuration
[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = ["E501", "N814"]

select = [
  "I", # isort
  "E", # pycodestyle-error
  "F", # pyflakes
  "PERF", # perflint
  "N", # pep8-naming
  "TRY", # tryceratops
  "UP", # pyupgrade
  "B", # flake8-bugbear
  "SIM", # flake8-simplify
  "ASYNC", # flake8-async
  "A", # flake8-builtins
  "C4", # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "EM", # flake8-errmsg
  "PIE", # flake8-pie
  "T20", # flake8-print
  "Q", # flake8-quotes
  "RET", # flake8-return
  "PTH", # flake8-use-pathlib
  "INP", # flake8-no-pep420
  "RSE", # flake8-raise
  "ICN", # flake8-import-conventions
  "RUF", # ruff
]
unfixable = []

# Ruff Formatting Configuration
[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "lf"
quote-style = "double"
skip-magic-trailing-comma = false

# Pyright Configuration
[tool.pyright]
defineConstant = {DEBUG = true}
exclude = [
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "examples",
  "tests",
  ".archive",
  "stubs",
]
include = ["tux"]
pythonPlatform = "Linux"
pythonVersion = "3.12"
reportMissingTypeStubs = true
reportShadowedImports = false
stubPath = "tux/stubs"
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."
